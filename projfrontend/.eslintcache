[{"/home/akash/GitHub/lcoproject/projfrontend/src/index.js":"1","/home/akash/GitHub/lcoproject/projfrontend/src/Routes.js":"2","/home/akash/GitHub/lcoproject/projfrontend/src/core/Home.js":"3","/home/akash/GitHub/lcoproject/projfrontend/src/backend.js":"4","/home/akash/GitHub/lcoproject/projfrontend/src/core/Base.js":"5","/home/akash/GitHub/lcoproject/projfrontend/src/core/Menu.js":"6","/home/akash/GitHub/lcoproject/projfrontend/src/user/Signup.js":"7","/home/akash/GitHub/lcoproject/projfrontend/src/user/Signin.js":"8","/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/index.js":"9","/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/PrivateRoutes.js":"10","/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/AdminRoutes.js":"11","/home/akash/GitHub/lcoproject/projfrontend/src/user/AdminDashBoard.js":"12","/home/akash/GitHub/lcoproject/projfrontend/src/user/UserDashBoard.js":"13","/home/akash/GitHub/lcoproject/projfrontend/src/admin/AddCategory.js":"14","/home/akash/GitHub/lcoproject/projfrontend/src/admin/helper/adminapicall.js":"15","/home/akash/GitHub/lcoproject/projfrontend/src/admin/ManageCategories.js":"16","/home/akash/GitHub/lcoproject/projfrontend/src/admin/AddProduct.js":"17","/home/akash/GitHub/lcoproject/projfrontend/src/admin/ManageProducts.js":"18","/home/akash/GitHub/lcoproject/projfrontend/src/admin/UpdateProduct.js":"19","/home/akash/GitHub/lcoproject/projfrontend/src/admin/UpdateCategories.js":"20","/home/akash/GitHub/lcoproject/projfrontend/src/core/Card.js":"21","/home/akash/GitHub/lcoproject/projfrontend/src/core/helper/ImageHelper.js":"22","/home/akash/GitHub/lcoproject/projfrontend/src/core/helper/coreapicalls.js":"23","/home/akash/GitHub/lcoproject/projfrontend/src/core/helper/CartHelper.js":"24","/home/akash/GitHub/lcoproject/projfrontend/src/core/Cart.js":"25"},{"size":154,"mtime":1611154810409,"results":"26","hashOfConfig":"27"},{"size":1981,"mtime":1616143598034,"results":"28","hashOfConfig":"27"},{"size":1057,"mtime":1616085436178,"results":"29","hashOfConfig":"27"},{"size":49,"mtime":1611119341532,"results":"30","hashOfConfig":"27"},{"size":1010,"mtime":1611119341552,"results":"31","hashOfConfig":"27"},{"size":2347,"mtime":1615061757226,"results":"32","hashOfConfig":"27"},{"size":3353,"mtime":1615061571614,"results":"33","hashOfConfig":"27"},{"size":3319,"mtime":1616060025601,"results":"34","hashOfConfig":"27"},{"size":1458,"mtime":1611154988964,"results":"35","hashOfConfig":"27"},{"size":538,"mtime":1614462765605,"results":"36","hashOfConfig":"27"},{"size":571,"mtime":1614462796406,"results":"37","hashOfConfig":"27"},{"size":2491,"mtime":1616012316810,"results":"38","hashOfConfig":"27"},{"size":249,"mtime":1612505173789,"results":"39","hashOfConfig":"27"},{"size":2300,"mtime":1615144024695,"results":"40","hashOfConfig":"27"},{"size":3162,"mtime":1616059231344,"results":"41","hashOfConfig":"27"},{"size":2312,"mtime":1616059066135,"results":"42","hashOfConfig":"27"},{"size":4672,"mtime":1616060106581,"results":"43","hashOfConfig":"27"},{"size":2383,"mtime":1616017057984,"results":"44","hashOfConfig":"27"},{"size":5317,"mtime":1616402387061,"results":"45","hashOfConfig":"27"},{"size":2609,"mtime":1616059759032,"results":"46","hashOfConfig":"27"},{"size":2153,"mtime":1616145542786,"results":"47","hashOfConfig":"27"},{"size":552,"mtime":1616085846196,"results":"48","hashOfConfig":"27"},{"size":243,"mtime":1616071656423,"results":"49","hashOfConfig":"27"},{"size":1055,"mtime":1616582648712,"results":"50","hashOfConfig":"27"},{"size":1172,"mtime":1616145278075,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"cbzbih",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},"/home/akash/GitHub/lcoproject/projfrontend/src/index.js",[],["111","112"],"/home/akash/GitHub/lcoproject/projfrontend/src/Routes.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/core/Home.js",["113","114"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getProducts } from \"../core/helper/coreapicalls\";\nfunction Home() {\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n  const loadAllProducts = () => {\n    getProducts().then((data) => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProducts(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadAllProducts();\n  }, []);\n  return (\n    <Base title=\"Home Page\" description=\"Welcome to the Store\">\n      <div className=\"\">\n        <h1 className=\"text-white\"> All of Products</h1>\n        <div className=\"row text-center\">\n          {products.map((product, index) => {\n            return (\n              <div key={index} className=\"col-4 mb-4\">\n                <Card product={product} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Base>\n  );\n}\n\nexport default Home;\n","/home/akash/GitHub/lcoproject/projfrontend/src/backend.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/core/Base.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/core/Menu.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/user/Signup.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/user/Signin.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/index.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/PrivateRoutes.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/AdminRoutes.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/user/AdminDashBoard.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/user/UserDashBoard.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/admin/AddCategory.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/admin/helper/adminapicall.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/admin/ManageCategories.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/admin/AddProduct.js",["115","116","117","118","119"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { createaProduct, getCategories } from \"./helper/adminapicall\";\nimport { isAuthenticated } from \"../auth/helper/index\";\nfunction AddProduct() {\n  const { user, token } = isAuthenticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getRedirect: false,\n    formData: {},\n  });\n  const {\n    name,\n    description,\n    price,\n    stock,\n    photo,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getRedirect,\n    formData,\n  } = values;\n  const preload = () => {\n    getCategories().then((data) => {\n      console.log(data);\n      if (data.error) {\n        setValues({ ...values, errors: data.error });\n      } else {\n        setValues({ ...values, categories: data, formData: new FormData() });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    createaProduct(user._id, token, formData).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          stock: \"\",\n          photo: \"\",\n          loading: false,\n          createdProduct: data.name,\n        });\n      }\n    });\n  };\n\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h3>{createdProduct} created Successfully!</h3>\n    </div>\n  );\n  const errorMessage = () => (\n    <div\n      className=\"alert alert-danger mt-3\"\n      style={{ display: error ? \"\" : \"none\" }}\n    >\n      <h3>{error}</h3>\n    </div>\n  );\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          placeholder=\"Name\"\n          className=\"form-control\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Quantity\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Create Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Add Product\"\n      description=\"Welcome This is to Add a Product\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {errorMessage()}\n          {successMessage()}\n          {createProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n}\n\nexport default AddProduct;\n","/home/akash/GitHub/lcoproject/projfrontend/src/admin/ManageProducts.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/admin/UpdateProduct.js",["120","121","122","123","124"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport {\n  updateaProduct,\n  getaProduct,\n  getCategories,\n} from \"./helper/adminapicall\";\nimport { isAuthenticated } from \"../auth/helper/index\";\n\nfunction UpdateProduct({ match }) {\n  const { user, token } = isAuthenticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getRedirect: false,\n    formData: new FormData(),\n  });\n  const {\n    name,\n    description,\n    price,\n    stock,\n    photo,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getRedirect,\n    formData,\n  } = values;\n  const preload = (productId) => {\n    getaProduct(productId).then((data) => {\n      console.log(data);\n      if (data.error) {\n        setValues({ ...values, errors: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData(),\n        });\n        preloadCategories();\n      }\n    });\n  };\n  const preloadCategories = () => {\n    getCategories().then((data) => {\n      if (data.error) {\n        setValues({ ...values, errors: data.error });\n      } else {\n        setValues({\n          categories: data,\n          formData: new FormData(),\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    updateaProduct(match.params.productId, user._id, token, formData).then(\n      (data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            stock: \"\",\n            photo: \"\",\n            loading: false,\n            createdProduct: data.name,\n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h3>{createdProduct} updated Successfully!</h3>\n    </div>\n  );\n  const errorMessage = () => (\n    <div\n      className=\"alert alert-danger mt-3\"\n      style={{ display: error ? \"\" : \"none\" }}\n    >\n      <h3>{error}</h3>\n    </div>\n  );\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          placeholder=\"Name\"\n          className=\"form-control\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Quantity\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Update Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Update Product\"\n      description=\"Welcome This is to Update a Product\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {errorMessage()}\n          {successMessage()}\n          {createProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n}\n\nexport default UpdateProduct;\n","/home/akash/GitHub/lcoproject/projfrontend/src/admin/UpdateCategories.js",["125"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport Base from \"../core/Base\";\nimport { updateaCategory, getaCategory } from \"./helper/adminapicall\";\n\nconst UpdateCategory = ({ match }) => {\n  const [name, setName] = useState();\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const { user, token } = isAuthenticated();\n\n  const goBack = () => (\n    <div className=\"mt-4\">\n      <Link to=\"/admin/dashboard\" className=\"btn btn-sm btn-success mb-3\">\n        Admin Home\n      </Link>\n    </div>\n  );\n  const preload = (categoryId) => {\n    getaCategory(categoryId).then((data) => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setName(data.name);\n      }\n    });\n  };\n  useEffect(() => {\n    preload(match.params.categoryId);\n  }, []);\n  const handleChange = (event) => {\n    setError(\"\");\n    setName(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setError(\"\");\n    setSuccess(false);\n\n    // backend request\n    updateaCategory(user._id, token, { name }).then((data) => {\n      if (data.errors) {\n        console.log(\"THIS IS THE ERR\", data.errors);\n        setError(data.error);\n      } else {\n        setError(\"\");\n        setSuccess(true);\n        setName(\"\");\n      }\n    });\n  };\n  const successMessage = () => {\n    if (success) {\n      return <h4 className=\"text-success\"> Category Updated Successfully</h4>;\n    }\n  };\n  const errorMessage = () => {\n    if (error) {\n      return <h4 className=\"text-danger\"> There was an error</h4>;\n    }\n  };\n  const myCategoryForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <p className=\"lead\">Update the Category: </p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange}\n          value={name}\n          autoFocus\n          required\n          placeholder=\"For Example Summer\"\n        />\n        <button onClick={onSubmit} className=\"btn btn-outline-info\">\n          Update Category\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Update Category here\"\n      description=\"Update the category of products\"\n      className=\"container bg-info p-4\"\n    >\n      <div className=\"row bg-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {errorMessage()}\n          {myCategoryForm()}\n          {goBack()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateCategory;\n","/home/akash/GitHub/lcoproject/projfrontend/src/core/Card.js",["126","127","128"],"import React, { useState, useEffect } from \"react\";\nimport ImageHelper from \"./helper/ImageHelper\";\nimport { addItemToCart, removeItemFromCart } from \"../core/helper/CartHelper\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Card = ({\n  product,\n  addtoCart = true,\n  removeFromCart = false,\n  setReload = (f) => f,\n  reload = undefined,\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n  const cardTitle = product ? product.name : \"A photo from pexels\";\n  const cardDescription = product ? product.description : \"Default description\";\n  const cardPrice = product ? product.price : \"Default\";\n\n  const addToCart = () => {\n    addItemToCart(product, () => setRedirect(true));\n  };\n\n  const getARedirect = (redirect) => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n  const showAddToCart = (addtoCart) => {\n    return (\n      addtoCart && (\n        <button\n          onClick={addToCart}\n          className=\"btn btn-block btn-outline-success mt-2 mb-2\"\n        >\n          Add to Cart\n        </button>\n      )\n    );\n  };\n  const showRemoveFromCart = (removeFromCart) => {\n    return (\n      removeFromCart && (\n        <button\n          onClick={() => {\n            setReload(!reload);\n            removeItemFromCart(product._id);\n          }}\n          className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\n        >\n          Remove from cart\n        </button>\n      )\n    );\n  };\n  return (\n    <div className=\"card text-white bg-dark border border-info \">\n      <div className=\"card-header lead\">{cardTitle}</div>\n      <div className=\"card-body\">\n        {getARedirect(redirect)}\n        <ImageHelper product={product} />\n        <p className=\"lead bg-success font-weight-normal text-wrap\">\n          {cardDescription}\n        </p>\n        <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cardPrice}</p>\n        <div className=\"row\">\n          <div className=\"col-12\">{showAddToCart(addtoCart)}</div>\n          <div className=\"col-12\">{showRemoveFromCart(removeFromCart)}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/home/akash/GitHub/lcoproject/projfrontend/src/core/helper/ImageHelper.js",["129"],"import React from \"react\";\nimport { API } from \"../../backend\";\n\nfunction ImageHelper({ product }) {\n  const imageurl = product\n    ? `${API}/product/photo/${product._id}`\n    : \"https://images.pexels.com/photos/6547287/pexels-photo-6547287.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\";\n  return (\n    <div className=\"rounded border border-success p-2\">\n      <img\n        src={imageurl}\n        alt=\"photo\"\n        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        className=\"mb-3 rounded\"\n      />\n    </div>\n  );\n}\n\nexport default ImageHelper;\n","/home/akash/GitHub/lcoproject/projfrontend/src/core/helper/coreapicalls.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/core/helper/CartHelper.js",["130"],"export const addItemToCart = (item, next) => {\n  let cart = [];\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.push({\n      ...item,\n      count: 1,\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    next();\n  }\n};\n\nexport const loadCart = () => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\"));\n    }\n  }\n};\n\nexport const removeItemFromCart = (productId) => {\n  let cart = [];\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.map((product, index) => {\n      if (product._id === productId) {\n        cart.splice(index, 1);\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n  return cart;\n};\n\nexport const cartEmpty = (next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"cart\");\n    next();\n  }\n};\n","/home/akash/GitHub/lcoproject/projfrontend/src/core/Cart.js",["131"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\n\nimport { loadCart } from \"./helper/CartHelper\";\nconst Cart = () => {\n  const [products, setProducts] = useState([]);\n  const [reload, setReload] = useState(false);\n  useEffect(() => {\n    setProducts(loadCart);\n  }, [reload]);\n\n  const loadAllProducts = () => {\n    return (\n      <div>\n        <h1>This is load All products</h1>\n        {products.map((product, index) => (\n          <Card\n            key={index}\n            product={product}\n            removeFromCart={true}\n            addtoCart={false}\n            setReload={setReload}\n            reload={reload}\n          />\n        ))}\n      </div>\n    );\n  };\n  const loadCheckout = () => {\n    return (\n      <div>\n        <h1>This is Checkout section</h1>\n      </div>\n    );\n  };\n  return (\n    <Base title=\"Cart Page\" description=\"Check your Cart\">\n      <div className=\"row\">\n        <div className=\"col-6\">{loadAllProducts()}</div>\n        <div className=\"col-6\">{loadCheckout()}</div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Cart;\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"136","severity":1,"message":"140","line":9,"column":10,"nodeType":"138","messageId":"139","endLine":9,"endColumn":15},{"ruleId":"136","severity":1,"message":"141","line":27,"column":5,"nodeType":"138","messageId":"139","endLine":27,"endColumn":10},{"ruleId":"136","severity":1,"message":"142","line":29,"column":5,"nodeType":"138","messageId":"139","endLine":29,"endColumn":13},{"ruleId":"136","severity":1,"message":"143","line":30,"column":5,"nodeType":"138","messageId":"139","endLine":30,"endColumn":12},{"ruleId":"136","severity":1,"message":"144","line":33,"column":5,"nodeType":"138","messageId":"139","endLine":33,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":49,"column":6,"nodeType":"147","endLine":49,"endColumn":8,"suggestions":"148"},{"ruleId":"136","severity":1,"message":"141","line":32,"column":5,"nodeType":"138","messageId":"139","endLine":32,"endColumn":10},{"ruleId":"136","severity":1,"message":"142","line":34,"column":5,"nodeType":"138","messageId":"139","endLine":34,"endColumn":13},{"ruleId":"136","severity":1,"message":"143","line":35,"column":5,"nodeType":"138","messageId":"139","endLine":35,"endColumn":12},{"ruleId":"136","severity":1,"message":"144","line":38,"column":5,"nodeType":"138","messageId":"139","endLine":38,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":74,"column":6,"nodeType":"147","endLine":74,"endColumn":8,"suggestions":"150"},{"ruleId":"145","severity":1,"message":"151","line":31,"column":6,"nodeType":"147","endLine":31,"endColumn":8,"suggestions":"152"},{"ruleId":"136","severity":1,"message":"153","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"154","line":14,"column":10,"nodeType":"138","messageId":"139","endLine":14,"endColumn":15},{"ruleId":"136","severity":1,"message":"155","line":14,"column":17,"nodeType":"138","messageId":"139","endLine":14,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":10,"column":7,"nodeType":"158","endLine":15,"endColumn":9},{"ruleId":"159","severity":1,"message":"160","line":30,"column":31,"nodeType":"161","messageId":"162","endLine":30,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'photo' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["167"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [preload]",{"range":"174","text":"175"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"176","text":"177"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"178","text":"179"},[1098,1100],"[preload]",[1668,1670],"[match.params.productId, preload]",[905,907],"[match.params.categoryId]"]