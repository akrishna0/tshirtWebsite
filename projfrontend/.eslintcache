[{"/home/akash/GitHub/lcoproject/projfrontend/src/index.js":"1","/home/akash/GitHub/lcoproject/projfrontend/src/Routes.js":"2","/home/akash/GitHub/lcoproject/projfrontend/src/core/Home.js":"3","/home/akash/GitHub/lcoproject/projfrontend/src/backend.js":"4","/home/akash/GitHub/lcoproject/projfrontend/src/core/Base.js":"5","/home/akash/GitHub/lcoproject/projfrontend/src/core/Menu.js":"6","/home/akash/GitHub/lcoproject/projfrontend/src/user/Signup.js":"7","/home/akash/GitHub/lcoproject/projfrontend/src/user/Signin.js":"8","/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/index.js":"9","/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/PrivateRoutes.js":"10","/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/AdminRoutes.js":"11","/home/akash/GitHub/lcoproject/projfrontend/src/user/AdminDashBoard.js":"12","/home/akash/GitHub/lcoproject/projfrontend/src/user/UserDashBoard.js":"13","/home/akash/GitHub/lcoproject/projfrontend/src/admin/AddCategory.js":"14"},{"size":154,"mtime":1611154810409,"results":"15","hashOfConfig":"16"},{"size":1039,"mtime":1615064153632,"results":"17","hashOfConfig":"16"},{"size":347,"mtime":1611119341568,"results":"18","hashOfConfig":"16"},{"size":49,"mtime":1611119341532,"results":"19","hashOfConfig":"16"},{"size":1010,"mtime":1611119341552,"results":"20","hashOfConfig":"16"},{"size":2347,"mtime":1615061757226,"results":"21","hashOfConfig":"16"},{"size":3353,"mtime":1615061571614,"results":"22","hashOfConfig":"16"},{"size":3316,"mtime":1615061909350,"results":"23","hashOfConfig":"16"},{"size":1458,"mtime":1611154988964,"results":"24","hashOfConfig":"16"},{"size":538,"mtime":1614462765605,"results":"25","hashOfConfig":"16"},{"size":571,"mtime":1614462796406,"results":"26","hashOfConfig":"16"},{"size":2399,"mtime":1615063715602,"results":"27","hashOfConfig":"16"},{"size":249,"mtime":1612505173789,"results":"28","hashOfConfig":"16"},{"size":1327,"mtime":1615095332979,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"k7wa6p",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"/home/akash/GitHub/lcoproject/projfrontend/src/index.js",[],["63","64"],"/home/akash/GitHub/lcoproject/projfrontend/src/Routes.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/core/Home.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/backend.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/core/Base.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/core/Menu.js",[],["65","66"],"/home/akash/GitHub/lcoproject/projfrontend/src/user/Signup.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/user/Signin.js",["67"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper/index\";\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    role: \"\",\n    loading: false,\n    didRedirect: false,\n  });\n  const { email, password, role, error, loading, didRedirect } = values;\n  const { user } = isAuthenticated();\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then((data) => {\n        if (data.errors) {\n          setValues({ ...values, error: data.errors, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true,\n            });\n          });\n        }\n      })\n      .catch(console.log(\"SIGNIN FAILED\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />;\n      } else {\n        return <Redirect to=\"/user/dashboard\" />;\n      }\n    }\n    if (isAuthenticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 offset-sm-4 text-left\">\n          <div\n            className=\"alert alert-success\"\n            style={{ display: loading ? \"\" : \"none\" }}\n          >\n            <h1>Loading......</h1>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 offset-sm-4 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const signinForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 offset-sm-4 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input\n                onChange={handleChange(\"email\")}\n                value={email}\n                type=\"Email\"\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                type=\"password\"\n                className=\"form-control\"\n              />\n            </div>\n            <button\n              onClick={onSubmit}\n              type=\"submit\"\n              className=\"btn btn-success btn-block\"\n            >\n              Sign In\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In Page\" description=\"This is a signin page\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signinForm()}\n      {performRedirect()}\n    </Base>\n  );\n};\n\nexport default Signin;\n","/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/index.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/PrivateRoutes.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/auth/helper/AdminRoutes.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/user/AdminDashBoard.js",["68"],"import React from \"react\";\nimport Base from \"../core/Base\";\nimport { isAuthenticated } from \"../auth/helper/index\";\nimport { Link } from \"react-router-dom\";\nconst AdminDashBoard = () => {\n  const {\n    user: { name, email, role },\n  } = isAuthenticated();\n\n  const adminLeftSide = () => {\n    return (\n      <div className=\"card\">\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <Link\n              to=\"/admin/create/category/\"\n              className=\"nav-link text-success\"\n            >\n              Create Categories\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link\n              to=\"/admin/create/category/\"\n              className=\"nav-link text-success\"\n            >\n              Create Products\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link\n              to=\"/admin/create/category/\"\n              className=\"nav-link text-success\"\n            >\n              Manage Orders\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link\n              to=\"/admin/create/category/\"\n              className=\"nav-link text-success\"\n            >\n              Manage Products\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n  const adminRightSide = () => {\n    return (\n      <div className=\"card mb-4\">\n        <h4 className=\"card-header\">Admin Info</h4>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <span className=\"badge badge-success mr-2\"> Name: </span>\n            {name}\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"badge badge-success mr-2\"> Email: </span> {email}\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"badge badge-danger mr-2\"> Admin Area </span>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n  return (\n    <Base\n      title=\"Welcome to Admin zone\"\n      description=\"Manage all of the products here\"\n      className=\"container bg-success p-4\"\n    >\n      <div className=\"row\">\n        <div className=\"col-3\">{adminLeftSide()}</div>\n        <div className=\"col-9\">{adminRightSide()}</div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AdminDashBoard;\n","/home/akash/GitHub/lcoproject/projfrontend/src/user/UserDashBoard.js",[],"/home/akash/GitHub/lcoproject/projfrontend/src/admin/AddCategory.js",["69","70","71","72","73","74","75","76"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport Base from \"../core/Base\";\n\nconst AddCategory = () => {\n  const [name, setName] = useState();\n  const [error, setError] = useState(false);\n  const [sucess, setSucess] = useState(false);\n  const { user, token } = isAuthenticated();\n\n  const goBack = () => (\n    <div className=\"mt-4\">\n      <Link to=\"/admin/dashboard\" className=\"btn btn-sm btn-success mb-3\">\n        Admin Home\n      </Link>\n    </div>\n  );\n  const myCategoryForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <p className=\"lead\">Enter the Category: </p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          autoFocus\n          required\n          placeholder=\"For Example Summer\"\n        />\n        <button className=\"btn btn-outline-info\">Create Category</button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Create a Category here\"\n      description=\"Add a new category of products\"\n      className=\"container bg-info p-4\"\n    >\n      <div className=\"row bg-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {myCategoryForm()}\n          {goBack()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AddCategory;\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":15,"column":11,"nodeType":"85","messageId":"86","endLine":15,"endColumn":15},{"ruleId":"83","severity":1,"message":"87","line":7,"column":26,"nodeType":"85","messageId":"86","endLine":7,"endColumn":30},{"ruleId":"83","severity":1,"message":"88","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":14},{"ruleId":"83","severity":1,"message":"89","line":7,"column":16,"nodeType":"85","messageId":"86","endLine":7,"endColumn":23},{"ruleId":"83","severity":1,"message":"90","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":15},{"ruleId":"83","severity":1,"message":"91","line":8,"column":17,"nodeType":"85","messageId":"86","endLine":8,"endColumn":25},{"ruleId":"83","severity":1,"message":"92","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":16},{"ruleId":"83","severity":1,"message":"93","line":9,"column":18,"nodeType":"85","messageId":"86","endLine":9,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":10,"column":11,"nodeType":"85","messageId":"86","endLine":10,"endColumn":15},{"ruleId":"83","severity":1,"message":"94","line":10,"column":17,"nodeType":"85","messageId":"86","endLine":10,"endColumn":22},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'role' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'sucess' is assigned a value but never used.","'setSucess' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]